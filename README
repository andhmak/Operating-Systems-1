Οι μεταγλωττισμοί γίνονται με την εντολή "make all", που κάνει και το compilation parent και child, αφού το χρειάζεται ο parent.

Η υλοποίηση έγινε με POSIX σημαφόρους.

Ο κώδικας χωρίζεται σε δύο αρχεία, parent.c, για την γονική διεργασία, και child.c, που γίνεται exec από τα παιδιά που κάνει fork ο parent.

Ο γονιός παίρνει τα ορίσματα και λήγει με μήνυμα λάθους αν δεν υπάρχει το αρχείο, είναι λάθος ο αριθμός ορισμάτων ή υπάρχει αρνητικό όρισμα.
Διαβάζει επίσης το αρχείο για να καθορίσει το πλήθος των γραμμών.
Μετά αρχικοποιεί τις δομές διαμοιραζόμενης μνήμης και τους σημαφόρους, επιστρέφοντας με λάθος αν κάτι πάει στραβά.
Οι σημαφόροι είναι τρεις, ο request, που δίνει πρόσβαση σε ένα παιδί για να κάνει ένα αίτημα, που αρχικοποιείται σε 1 ώστα να μπορεί να
αρχίσει η διαδικασία, ο response, που δίνει πρόσβαση στον γονιό να δώσει μια γραμμή σαν απάντηση, που αρχικοποιείται σε 0 γιατί περιμένει
το παιδί να ζητήσει απάντηση, και ο read_response, που δίνει δικαίωμα σε ένα παιδί να διαβάσει την απάντηση, και αρχικοποιείται σε 0 γιατί
περιμένει τον γονιό να τον αυξήσει όταν δώσει απάντηση.
Μετά καλεί με fork τον κατάλληλο αριθμό παιδιών που δίνει το αντίστοιχο όρισμα, και το κάθε παιδί κάνει exec την child, περνώντας σαν
ορίσματα τον αριθμό των ερωτημάτων που πρέπει να γίνουν και το πλήθος γραμμών του αρχείου.
Αν γίνει λάθος σε fork, ο γονιός προσπαθεί να αποδεσμεύσει σημαφόρους και μνήμη και λήγει.
Αν δεν μπορέσει να γίνει η exec, γράφεται στην κοινή μνήμη ειδοποίηση/κωδικός του λάθους (-1) για τον γονιό, ώστε να ξέρει να μην περιμένει
παραπάνω ερωτήματα.
Το κάθε παιδί μετά "ανοίγει" κατάλληλα τους σημαφόρους και την διαμοιραζόμενη μνήμη, επιστρέφοντας με λάθος στην περίπτωση προβλήματος.
Αρχίζει μετά να κάνει τον κατάλληλο αριθμό αιτημάτων, γράφοντας περιμένοντας να βρει ελεύθερο τον σημαφόρο για να γράψει τον αριθμό της
γραμμής που ζητά.
Παράλληλα, ο γονιός περιμένει να αυξηθεί ο σημαφόρος της απάντησης.
Όταν ένα παιδί μπορέσει να κάνει ένα αίτημα, τυπώνει ποια γραμμή ζήτησε, ανεβάζει τον σημαφόρο της απάντησης ωστε να "ενεργοποιηθεί" ο γονιός,
και αρχίζει να μετράει χρόνο, περιμένοντας να ανέβει ο σημαφόρος διαβάσματος της απάντησης.
Ο γονιός βλέπει το αίτημα όταν ανέβει ο σημαφόρος της απάντησης, απαντάει με την αιτηθείσα γραμμή, και ανεβάζει τον σημαφόρο του διαβάσματος της
απάντησης. Αν το μήνυμα αυτό αντί για να ζητάει γραμμή είναι μήνυμα λάθους, τότε ο γονιός σταματά να περιμένει το πλήθος αιτημάτων της εργασίας που
έληξε λόγω λάθους.
Τότε το παιδί παίρνει και τυπώνει την απάντηση και σταματάει το ρολόι, προσθέτοντας τον χρόνο στο σύνολο.
Όταν τελειώσει αυτή η διαδικασία για ένα παιδί, υπολογίζει τον μέσο χρόνο, "κλείνει" τους σημαφόρους και αποσυνδέει την κοινή μνήμη, επιστρέφοντας
με λάθος αν δημιουργηθεί πρόβλημα, και αν όχι επιστρέφει με επιτυχία τυπώνοντας το id της και τον μέσο χρόνο.
Ο γονιός, αφού έχει απαντήσει όλα τα ερωτήματα που αναμένει με βάση το πλήθος των παιδιών και τα ερωτήματα του καθενός, "μαζεύει" τα παιδιά και τους
κωδικούς επιστροφής τους και τα τυπώνει.
Μετά κλείνει το αρχείο και τους σημαφόρους και αποσυνδέει την κοινή μνήμη και διαγράφει την μνήμη και τους σημαφόρους που δέσμευσε, επιστρέφοντας με
λάθος αν δεν μπορεί να αποδεσμεύσει κάτι.